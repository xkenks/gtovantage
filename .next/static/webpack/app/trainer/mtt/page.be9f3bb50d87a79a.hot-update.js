"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/trainer/mtt/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useAuth = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// マスターユーザーのメールアドレスリスト\nconst MASTER_USER_EMAILS = [\n    \"admin@gtovantage.com\",\n    \"master@gtovantage.com\"\n];\n// メール確認トークンを生成する関数\nconst generateVerificationToken = ()=>{\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // 初期化時にローカルストレージからユーザー情報を読み込み\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedUser = localStorage.getItem(\"gto-vantage-user\");\n        if (savedUser) {\n            try {\n                const parsedUser = JSON.parse(savedUser);\n                var _parsedUser_emailVerified, _parsedUser_isMasterUser, _parsedUser_subscriptionStatus;\n                // 古いユーザーデータの場合は新しい形式に変換\n                const updatedUser = {\n                    ...parsedUser,\n                    emailVerified: (_parsedUser_emailVerified = parsedUser.emailVerified) !== null && _parsedUser_emailVerified !== void 0 ? _parsedUser_emailVerified : false,\n                    isMasterUser: (_parsedUser_isMasterUser = parsedUser.isMasterUser) !== null && _parsedUser_isMasterUser !== void 0 ? _parsedUser_isMasterUser : MASTER_USER_EMAILS.includes(parsedUser.email),\n                    subscriptionStatus: (_parsedUser_subscriptionStatus = parsedUser.subscriptionStatus) !== null && _parsedUser_subscriptionStatus !== void 0 ? _parsedUser_subscriptionStatus : \"free\",\n                    subscriptionExpiresAt: parsedUser.subscriptionExpiresAt\n                };\n                setUser(updatedUser);\n                localStorage.setItem(\"gto-vantage-user\", JSON.stringify(updatedUser));\n            } catch (error) {\n                console.error(\"Failed to parse saved user:\", error);\n                localStorage.removeItem(\"gto-vantage-user\");\n            }\n        }\n        setIsLoading(false);\n    }, []);\n    const register = async (email, password, name)=>{\n        try {\n            // 既存ユーザーのチェック\n            const existingUsers = JSON.parse(localStorage.getItem(\"gto-vantage-users\") || \"[]\");\n            const existingUser = existingUsers.find((u)=>u.email === email);\n            if (existingUser) {\n                throw new Error(\"このメールアドレスは既に登録されています\");\n            }\n            // マスターユーザーかどうかをチェック\n            const isMasterUser = MASTER_USER_EMAILS.includes(email);\n            const verificationToken = generateVerificationToken();\n            // 新しいユーザーを作成\n            const newUser = {\n                id: Date.now().toString(),\n                email,\n                name,\n                createdAt: new Date().toISOString(),\n                emailVerified: false,\n                verificationToken,\n                isMasterUser,\n                subscriptionStatus: isMasterUser ? \"master\" : \"free\",\n                subscriptionExpiresAt: isMasterUser ? new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10).toISOString() : undefined // マスターユーザーは10年間有効\n            };\n            // ユーザーリストに追加\n            const updatedUsers = [\n                ...existingUsers,\n                {\n                    ...newUser,\n                    password\n                }\n            ];\n            localStorage.setItem(\"gto-vantage-users\", JSON.stringify(updatedUsers));\n            // 現在のユーザーとして設定（メール確認前でもログイン可能）\n            setUser(newUser);\n            localStorage.setItem(\"gto-vantage-user\", JSON.stringify(newUser));\n            // メール確認メールを送信（実際のアプリではサーバーサイドで実装）\n            console.log(\"Verification email sent to:\", email, \"Token:\", verificationToken);\n            return true;\n        } catch (error) {\n            console.error(\"Registration failed:\", error);\n            return false;\n        }\n    };\n    const login = async (email, password)=>{\n        try {\n            const users = JSON.parse(localStorage.getItem(\"gto-vantage-users\") || \"[]\");\n            const user = users.find((u)=>u.email === email && u.password === password);\n            if (!user) {\n                throw new Error(\"メールアドレスまたはパスワードが正しくありません\");\n            }\n            const { password: _, ...userWithoutPassword } = user;\n            // マスターユーザーの場合は自動的にメール確認済みにする\n            if (MASTER_USER_EMAILS.includes(email) && !userWithoutPassword.emailVerified) {\n                userWithoutPassword.emailVerified = true;\n                userWithoutPassword.isMasterUser = true;\n                userWithoutPassword.subscriptionStatus = \"master\";\n                userWithoutPassword.subscriptionExpiresAt = new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10).toISOString();\n                // ユーザーリストを更新\n                const updatedUsers = users.map((u)=>u.email === email ? {\n                        ...u,\n                        ...userWithoutPassword\n                    } : u);\n                localStorage.setItem(\"gto-vantage-users\", JSON.stringify(updatedUsers));\n            }\n            setUser(userWithoutPassword);\n            localStorage.setItem(\"gto-vantage-user\", JSON.stringify(userWithoutPassword));\n            return true;\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n            return false;\n        }\n    };\n    const logout = ()=>{\n        setUser(null);\n        localStorage.removeItem(\"gto-vantage-user\");\n    };\n    const verifyEmail = async (token)=>{\n        try {\n            if (!user) return false;\n            const users = JSON.parse(localStorage.getItem(\"gto-vantage-users\") || \"[]\");\n            const userIndex = users.findIndex((u)=>u.email === user.email);\n            if (userIndex === -1) return false;\n            const currentUser = users[userIndex];\n            if (currentUser.verificationToken !== token) return false;\n            // メール確認を完了\n            const updatedUser = {\n                ...user,\n                emailVerified: true,\n                verificationToken: undefined\n            };\n            // ユーザーリストを更新\n            users[userIndex] = {\n                ...currentUser,\n                emailVerified: true,\n                verificationToken: undefined\n            };\n            localStorage.setItem(\"gto-vantage-users\", JSON.stringify(users));\n            // 現在のユーザーを更新\n            setUser(updatedUser);\n            localStorage.setItem(\"gto-vantage-user\", JSON.stringify(updatedUser));\n            return true;\n        } catch (error) {\n            console.error(\"Email verification failed:\", error);\n            return false;\n        }\n    };\n    const resendVerificationEmail = async (email)=>{\n        try {\n            const users = JSON.parse(localStorage.getItem(\"gto-vantage-users\") || \"[]\");\n            const userIndex = users.findIndex((u)=>u.email === email);\n            if (userIndex === -1) return false;\n            const newToken = generateVerificationToken();\n            users[userIndex].verificationToken = newToken;\n            localStorage.setItem(\"gto-vantage-users\", JSON.stringify(users));\n            // 現在のユーザーも更新\n            if (user && user.email === email) {\n                const updatedUser = {\n                    ...user,\n                    verificationToken: newToken\n                };\n                setUser(updatedUser);\n                localStorage.setItem(\"gto-vantage-user\", JSON.stringify(updatedUser));\n            }\n            console.log(\"Verification email resent to:\", email, \"New token:\", newToken);\n            return true;\n        } catch (error) {\n            console.error(\"Resend verification email failed:\", error);\n            return false;\n        }\n    };\n    const isAuthenticated = !!user;\n    var _user_emailVerified;\n    const isEmailVerified = (_user_emailVerified = user === null || user === void 0 ? void 0 : user.emailVerified) !== null && _user_emailVerified !== void 0 ? _user_emailVerified : false;\n    var _user_isMasterUser;\n    const isMasterUser = (_user_isMasterUser = user === null || user === void 0 ? void 0 : user.isMasterUser) !== null && _user_isMasterUser !== void 0 ? _user_isMasterUser : false;\n    const hasActiveSubscription = (user === null || user === void 0 ? void 0 : user.subscriptionStatus) === \"premium\" || (user === null || user === void 0 ? void 0 : user.subscriptionStatus) === \"master\" || (user === null || user === void 0 ? void 0 : user.subscriptionExpiresAt) && new Date(user.subscriptionExpiresAt) > new Date();\n    const value = {\n        user,\n        isLoading,\n        register,\n        login,\n        logout,\n        isAuthenticated,\n        verifyEmail,\n        resendVerificationEmail,\n        isEmailVerified,\n        isMasterUser,\n        hasActiveSubscription\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kensuke/Desktop/gtovantage/src/contexts/AuthContext.tsx\",\n        lineNumber: 247,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});